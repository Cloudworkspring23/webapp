# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Packer build CI

on:
  push:
    branches: ["main"]

jobs:
  packer:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy all files
        run: rsync -arv --exclude='.git/' --exclude='.github/' --exclude='.gitignore' . ./webapp && ls -R

      - name: Zip file
        uses: montudor/action-zip@v1
        with:
          args: zip -r webapp.zip webapp/

      - name: Delete copied files
        run: rm -rf webapp && ls -R

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Run `packer init`
        id: init
        run: "packer init ami.pkr.hcl"

      - name: Run `packer validate`
        id: validate
        run: "packer validate -var 'ak=${{ secrets.AWS_ACCESS_KEY_ID }}' -var 'sk=${{ secrets.AWS_SECRET_ACCESS_KEY }}' --var-file=aws.pkvars.hcl ami.pkr.hcl"

      - name: Run `packer build`
        id: build
        run: "packer build -var 'ak=${{ secrets.AWS_ACCESS_KEY_ID }}' -var 'sk=${{ secrets.AWS_SECRET_ACCESS_KEY }}' --var-file=aws.pkvars.hcl ami.pkr.hcl"
      
      - name: Step 8 - Run `Updating Launch Template with latest AMI id`
        id: updating 
        run: | 
          echo "Deploying Packer Build"
          AMI_ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)
          echo "$AMI_ID"
          echo "ami=$AMI_ID" >> "$GITHUB_OUTPUT"
      
  autoscaling:
    needs: packer_build_ami
    runs-on: ubuntu-latest
    name: Auto scaling group launch template & instance refresh
    
    steps: 
      
      - name: Step 1 - Configure AWS Credentials for Prod
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Step 2 - Run `Configuring the launch template` 
        id: configuring
        run: |
          aws --version
          aws ec2 describe-launch-templates
          aws ec2 create-launch-template-version --launch-template-data '{"ImageId":"${{needs.packer_build_ami.outputs.ami_id}}"}' --source-version 1 --launch-template-id ${{ vars.LAUNCH_TEMPLATE_ID }}  

      - name: Step 3 - Run `Instance Refresh ` 
        id: refreshing
        run: "aws autoscaling start-instance-refresh --auto-scaling-group-name csye6225-asg-spring2023"